{"mappings":"AAAO,MAAMA,EAAM,CAClBC,KAAMC,SAASC,cAAc,cAC7BC,UAAWF,SAASC,cAAc,eCFtBE,EAAmBC,GACvB,kFAC2CA,EAASC,mCACjDD,EAASE,0BACXF,EAASG,wBCFNC,EAAUJ,IACrB,MAAMK,EAAkBC,KAAKC,MAAMC,aAAaC,QAHtC,WAGuD,GACjEJ,EAAgBK,KAAKV,GAErBQ,aAAaG,QANH,QAMgBL,KAAKM,UAAUP,GAAiB,EAE/CQ,EAAU,IACdP,KAAKC,MAAMC,aAAaC,QATrB,UAWCK,EAAab,IACxB,MAAMc,EAAMF,IAAUG,QAAOC,GAASA,EAAMhB,KAAOA,IACnDO,aAAaG,QAbH,QAagBL,KAAKM,UAAUG,GAAK,ECZzC,IAkBIG,EAAS,CAACC,EAAO,KAC1BC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,CAACtB,EAAIuB,IAGrDvB,IAFFuB,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,KAGP,IC/BE,MAAMG,EAAiBhC,IAC5B,MAAMK,EAAW,CAAEC,GAAIiB,KAIvB,OAHA,IAAIU,SAASjC,GAAMkC,SAAQ,CAACZ,EAAOa,KACjC9B,EAAS8B,GAAOb,CAAK,IAEhBjB,CAAQ,ECDU,MACzB,MAAM+B,EAAmBlB,IACzB,IAAKkB,EAAkB,OACvB,MAAMC,EAASD,EAAiBR,QAC9B,CAACU,EAAMC,IAAYD,EAAOlC,EAAiBmC,IAC3C,IAEFxC,EAAKI,UAAUqC,mBAAmB,YAAaH,EAAO,ECKxD,GAEAtC,EAAKC,KAAKyC,iBAAiB,UCfCC,IAC1BA,EAAMC,iBACN,MAAMtC,EAAW2B,EAAejC,EAAKC,MACrCS,EAAQJ,GACR,MAAMgC,EAASjC,EAAiBC,GAChCN,EAAKI,UAAUqC,mBAAmB,YAAaH,EAAO,IDWxDtC,EAAKI,UAAUsC,iBAAiB,SEnBNC,IACxB,GAA8B,WAA1BA,EAAME,OAAOC,SAAuB,CACtCH,EAAME,OAAOE,WAAWC,SACxB,MAAMC,EAAQN,EAAME,OAAOK,QAAQ3C,GACnCa,EAAW6B,E","sources":["src/js/refs.js","src/js/createTaskMarkup.js","src/js/localStorageAPI.js","node_modules/nanoid/index.browser.js","src/js/createFormData.js","src/js/renderTasks.js","src/index.js","src/js/onFormSubmit.js","src/js/daleteItem.js"],"sourcesContent":["export const refs ={\n form: document.querySelector('#task-form'),\n cardsList: document.querySelector('#task-list'),\n}","export const createTaskMarkup = dataForm => {\n  return `<li class=\"task-list-item\">\n      <button class=\"task-list-item-btn\" data-id='${dataForm.id}'>Удалить</button>\n      <h3>${dataForm.taskName}</h3>\n     <p>${dataForm.taskText}</p>\n  </li>`;\n};\n","const KEY = 'tasks';\n\nexport const addTask = dataForm => {\n  const initialFormData = JSON.parse(localStorage.getItem(KEY)) || [];\n  initialFormData.push(dataForm);\n\n  localStorage.setItem(KEY, JSON.stringify(initialFormData));\n};\nexport const getTask = () => {\n  return JSON.parse(localStorage.getItem(KEY));\n};\nexport const deleteTask = id => {\n  const arr = getTask().filter(value => value.id !== id);\n  localStorage.setItem(KEY, JSON.stringify(arr));\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { nanoid } from 'nanoid';\nexport const createFormData = form => {\n  const dataForm = { id: nanoid() };\n  new FormData(form).forEach((value, key) => {\n    dataForm[key] = value;\n  });\n  return dataForm;\n};\n","import { createTaskMarkup } from './createTaskMarkup';\nimport { refs } from './refs';\nimport { getTask } from './localStorageAPI';\n\n\nexport const renderTasks = () => {\n  const dataLocalStorage = getTask();\n  if (!dataLocalStorage) return;\n  const markup = dataLocalStorage.reduce(\n    (html, element) => html + createTaskMarkup(element),\n    ''\n  );\n  refs.cardsList.insertAdjacentHTML('beforeend', markup);\n};\n","/**\n\n * Розмітка картки задачі\n * <li class=\"task-list-item\">\n *     <button class=\"task-list-item-btn\">Удалить</button>\n *     <h3>Заголовок</h3>\n *     <p>Текст</p>\n * </li>\n *\n */\n\nimport { refs } from './js/refs';\n\nimport { renderTasks } from './js/renderTasks';\nimport { daleteItem } from './js/daleteItem';\nimport { onFormSubmit } from './js/onFormSubmit';\n\nrenderTasks();\n\nrefs.form.addEventListener('submit', onFormSubmit);\nrefs.cardsList.addEventListener('click', daleteItem);\n","import { createFormData } from './createFormData';\nimport { addTask } from './localStorageAPI';\nimport { createTaskMarkup } from './createTaskMarkup';\nimport { refs } from './refs';\nexport const onFormSubmit = event => {\n  event.preventDefault();\n  const dataForm = createFormData(refs.form);\n  addTask(dataForm);\n  const markup = createTaskMarkup(dataForm);\n  refs.cardsList.insertAdjacentHTML('beforeend', markup);\n};\n","import { deleteTask } from './localStorageAPI';\nexport const daleteItem = event => {\n  if (event.target.nodeName === 'BUTTON') {\n    event.target.parentNode.remove();\n    const idBtn = event.target.dataset.id;\n    deleteTask(idBtn);\n  }\n};\n"],"names":["$ee27a4d7c64fc8c4$export$21666b427502ea6d","form","document","querySelector","cardsList","$454981b0f76e497b$export$5abcd3dce68fbf9a","dataForm","id","taskName","taskText","$f1e93b4660a948dd$export$38a248e5348a1dc","initialFormData","JSON","parse","localStorage","getItem","push","setItem","stringify","$f1e93b4660a948dd$export$769aba8c64cf56b7","$f1e93b4660a948dd$export$f08d315250e1aa23","arr","filter","value","$cf399e049a9c4d34$export$ac4959f4f1338dfc","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","$e5694a396e3a3fb8$export$d8f3b24a9dfc1cb9","FormData","forEach","key","dataLocalStorage","markup","html","element","insertAdjacentHTML","addEventListener","event","preventDefault","target","nodeName","parentNode","remove","idBtn","dataset"],"version":3,"file":"index.1786ed49.js.map"}